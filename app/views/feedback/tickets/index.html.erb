
<div class="container">
  <div class="card shadow-sm">
    <div class="card-body p-4">
      <div class="row">
        <div class="col-7">
          <h1 class="display-4">Feedback</h1>
          <p><strong>We support comments!</strong> Start a discussion on a ticket that is already logged
            rather than creating a new one.</p>
          <small class="text-muted m-0">Open Feedback Count: <%= Feedback::Ticket.where.not(status: :closed).all.count %></small>

          <%= bootstrap_form_tag url: tickets_path, method: :get, layout: :inline, html: {data: {controller: "feedbackFilter"}} do |f| %>
            <%= f.text_field :q, hide_label: true, placeholder: 'Search by id or text', value: params[:q], "x-model" => "q", "@blur" => "reload()" %>
          <% end %>
        </div>
        <div class="col-5">
          <%= image_tag asset_url('feedback/undraw_collaborators_prrw.svg'), style: 'width: 100%; max-height: 250px' %>
        </div>
      </div>
    </div>
  </div>

  <div class="card position-relative">
    <div class="card-body">
      <div class="row">
        <div class="col-md-2">
          <div x-data="filterValues()" class="position-relative">
            <%= bootstrap_form_tag url: tickets_path, method: :get do |f| %>
              <%= f.select :status, options_for_select(Feedback::Ticket.statuses.keys.map { |k| [k.humanize, k] }, params[:status]), {prompt: 'status'}, {class: 'select-initial-height', "x-model" => "status", "@change" => "reload()"} %>
              <%= f.select :priority, options_for_select(Feedback::Ticket.priorities.keys.map { |k| [k.humanize, k] }, params[:priority]), {prompt: 'priority'}, {class: 'select-initial-height', "x-model" => "priority", "@change" => "reload()"} %>
              <%= f.select :category, options_for_select(Feedback::Ticket.categories.keys.map { |k| [k.humanize, k] }, params[:category]), {prompt: 'category'}, {class: 'select-initial-height', "x-model" => "category", "@change" => "reload()"} %>
              <%= f.select :assignee, options_for_select(User.where(id: Feedback::Ticket.all.distinct(:owner).pluck(:owner_id)).map { |u| [u.name, u.id] }, params[:assignee]), {prompt: 'assignee'}, {class: 'select-initial-height', "x-model" => "assignee", "@change" => "reload()"} %>
              <%= f.select :requester, options_for_select(User.where(id: Feedback::Ticket.all.distinct(:user).pluck(:user_id)).map { |u| [u.name, u.id] }, params[:requester]), {prompt: 'requester'}, {class: 'select-initial-height', "x-model" => "requester", "@change" => "reload()"} %>
              <%= f.select :order, options_for_select(['priority', 'created_at', 'ice_score'], params[:order]), {prompt: 'sort'}, {class: 'select-initial-height', "x-model" => "order", "@change" => "reload()"} %>
              <div class="text-center">
                <%= link_to 'Clear Filters', tickets_path(@ticket), class: "btn btn-primary text-white mt-2" %>
              </div>
            <% end %>
            <script>
                function filterValues() {
                    var urlParams = new URLSearchParams(window.location.search);
                    return {
                        status: urlParams.get('status') || '',
                        priority: urlParams.get('priority') || '',
                        category: urlParams.get('category') || '',
                        assignee: urlParams.get('assignee') || '',
                        requester: urlParams.get('requester') || '',
                        order: urlParams.get('order') || '',
                        q: urlParams.get('q') || '',
                        reload: function () {
                            var params = [];
                            if (this.status != "") {
                                params.push('status=' + this.status)
                            }
                            if (this.category != "") {
                                params.push('category=' + this.category)
                            }
                            if (this.priority != "") {
                                params.push('priority=' + this.priority)
                            }
                            if (this.assignee != "") {
                                params.push('assignee=' + this.assignee)
                            }
                            if (this.requester != "") {
                                params.push('requester=' + this.requester)
                            }
                            if (this.q != "") {
                                params.push('q=' + this.q)
                            }
                            if (this.order != "") {
                                params.push('order=' + this.order)
                            }
                            location.href = '?' + params.join('&')
                        }
                    }
                }
            </script>
          </div>
        </div>
        <div class="col-md-10">
          <div class="float-end">
            <%= link_to new_ticket_path, class: "float-end btn btn-primary" do %>
              <i class="fas fa-plus-circle h3"  data-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Create a new feedback ticket!"></i>
            <% end %>
          </div>
          <p class="text-muted mb-4">Showing <%= @tickets.count %> results.</p>
          <% if @tickets.empty? %>
            <h3>These aren't the droids you're looking for...</h3>
            <p class="text-muted">There are no feedback tickets matching your results</p>
          <% end %>
          <% @tickets.order("created_at DESC").each do |ticket| %>
            <%= render partial: "ticket_row", locals: {ticket: ticket} %>
          <% end %>
          <div class="row justify-content-center mt-4">
            <%== pagy_bootstrap_nav(@pagy) %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>